[{"/home/asus/WorkArea/React/arcdevelopment/src/index.js":"1","/home/asus/WorkArea/React/arcdevelopment/src/components/App.js":"2","/home/asus/WorkArea/React/arcdevelopment/src/components/ui/Header.js":"3","/home/asus/WorkArea/React/arcdevelopment/src/components/ui/Theme.js":"4","/home/asus/WorkArea/React/arcdevelopment/src/components/ui/Footer.js":"5"},{"size":209,"mtime":1608638521404,"results":"6","hashOfConfig":"7"},{"size":1262,"mtime":1608977781887,"results":"8","hashOfConfig":"7"},{"size":13479,"mtime":1608920764152,"results":"9","hashOfConfig":"7"},{"size":716,"mtime":1608730865177,"results":"10","hashOfConfig":"7"},{"size":3695,"mtime":1608983616297,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nft6b1",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/asus/WorkArea/React/arcdevelopment/src/index.js",[],"/home/asus/WorkArea/React/arcdevelopment/src/components/App.js",["24"],"import React from 'react';\nimport {  ThemeProvider } from '@material-ui/core/styles';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Header from './ui/Header';\nimport Footer from './ui/Footer';\nimport theme from './ui/Theme';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>  \n      <BrowserRouter>\n       <Header/>\n         <Switch>\n         <Route exact path=\"/\"  component={()=><div style={{height:\"2000px\"}}>Home</div>} />\n         <Route exact path=\"/services\" component={()=><div>Services</div>} />\n         <Route exact path=\"/customsoftware\" component={()=><div>Custom Software</div>} />\n         <Route exact path=\"/websites\" component={()=><div>Websites</div>} />\n         <Route exact path=\"/mobileapps\" component={()=><div>Mobile app</div>} />\n         <Route exact path=\"/revolution\" component={()=><div>Revolution</div>} />\n         <Route exact path=\"/about\" component={()=><div>About</div>} />\n         <Route exact path=\"/contact\" component={()=><div>Contact</div>} />\n         <Route exact path=\"/estimate\" component={()=><div>Estimate</div>} />\n         </Switch>\n         <Footer/>\n       </BrowserRouter>\n       </ThemeProvider>\n\n  );\n}\n \nexport default App;\n","/home/asus/WorkArea/React/arcdevelopment/src/components/ui/Header.js",["25","26","27"],"import React, { useState, useEffect } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport logo from \"../../assets/logo.svg\";\n\nfunction ElevationScroll(props) {\n  const { children } = props;\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nconst useStyles = makeStyles((theme) => ({\n  toolbarMargin: {\n    ...theme.mixins.toolbar,\n    marginBottom: \"1.5em\", //upper toolbar se kitne space chodna\n    [theme.breakpoints.down(\"md\")]: {\n      marginBottom: \"0.7em\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      marginBottom: \"0.2em\",\n    },\n  },\n  logo: {\n    // marginLeft: \"7rem\",\n    height: \"6em\",\n    fontSize: \"auto\",\n    [theme.breakpoints.down(\"md\")]: {\n      height: \"4em\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      height: \"3em\",\n    },\n  },\n  logoContainer: {\n    padding: 0,\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  tabContainer: {\n    marginLeft: \"auto\", //sabko right size bhej dega\n  },\n  tab: {\n    ...theme.typography.tab,\n    minWidth: 10, //tab ke bitch distance kum kardeta\n    marginLeft: \"25px\", //distance in pixel bec. we want different in different devices\n  },\n  button: {\n    ...theme.typography.estimate,\n    borderRadius: \"50px\", //4ro tarf de cure kara,\n    marginLeft: \"50px\",\n    marginRight: \"25px\",\n    height: \"45px\",\n  },\n  menu: {\n    backgroundColor: theme.palette.common.blue,\n    color: \"white\",\n    borderRadius: \" 0px\",\n  },\n  menuItem: {\n    ...theme.typography.tab,\n    opacity: 0.7,\n    \"&:hover\": {\n      opacity: 1,\n    },\n  },\n  drawerIcon: {\n    height: \"50px\",\n    width: \"50px\",\n  },\n  drawerIconContainer: {\n    marginLeft: \"auto\",\n    \"&:hover\": {\n      backgroundColor: \"transparent\", //hover karne pe koi color nahi aayega\n    },\n  },\n  drawer: {\n    backgroundColor: theme.palette.common.blue,\n  },\n  drawerItem: {\n    ...theme.typography.tab,\n    color: \"white\",\n    opacity: 0.7,\n  },\n  drawerItemEstimate: {\n    backgroundColor: theme.palette.common.orange,\n  },\n  drawerItemSeleted: {\n    \"&.MuiListItemText-root\":{\n      opacity:1\n    }\n  },\n  appbar: {\n    zIndex: theme.zIndex.modal + 1,\n  },\n}));\n\nexport default function Header(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n\n  const matches = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [value, setValue] = useState(0);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [openMenu, setOpenMenu] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const handleChange = (e, value) => {\n    setValue(value);\n  };\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget);\n    setOpenMenu(true);\n  };\n\n  const handleClose = (e) => {\n    setAnchorEl(null);\n    setOpenMenu(false);\n  };\n\n  const handleMenuItemClick = (e, i) => {\n    setAnchorEl(null);\n    setOpenMenu(false);\n    setSelectedIndex(i);\n  };\n  const menuOptions = [\n    {\n      name: \"Services\",\n      link: \"/services\",\n      activeIndex: 1,\n      selectedIndex: 0,\n    },\n    {\n      name: \"Custom Software Development\",\n      link: \"/customsoftware\",\n      activeIndex: 1,\n      selectedIndex: 1,\n    },\n    {\n      name: \"Mobile App Development\",\n      link: \"/mobileapps\",\n      activeIndex: 1,\n      selectedIndex: 2,\n    },\n    {\n      name: \"Website Development\",\n      link: \"/websites\",\n      activeIndex: 1,\n      selectedIndex: 3,\n    },\n  ];\n\n  const routes = [\n    { name: \"Home\", link: \"/\", activeIndex: 0 },\n    {\n      name: \"Services\",\n      link: \"/services\",\n      activeIndex: 1,\n      ariaOwns: anchorEl ? \"simple-menu\" : undefined,\n      ariaPopup: anchorEl ? \"true\" : undefined,\n      mouseOver: (event) => handleClick(event),\n    },\n    { name: \"The Revolution\", link: \"/revolution\", activeIndex: 2 },\n    { name: \"About Us\", link: \"/about\", activeIndex: 3 },\n    { name: \"Contact Us\", link: \"/contact\", activeIndex: 4 },\n  ];\n  useEffect(() => {\n    [...menuOptions, ...routes].forEach((route) => {\n      switch (window.location.pathname) {\n        case `${route.link}`:\n          if (value != route.activeIndex) {\n            setValue(route.activeIndex);\n            if (route.selectedIndex && route.selectedIndex !== selectedIndex) {\n              setSelectedIndex(route.selectedIndex);\n            }\n          }\n          break;\n        default:\n          break;\n      }\n    });\n\n    //or\n    // if (window.location.pathname === \"/\" && value !== 0) {\n    //   setValue(0);\n    // } else if (window.location.pathname === \"/services\" && value !== 1)\n    //   setValue(1);\n    // else if (window.location.pathname === \"/revolution\" && value !== 2)\n    //   setValue(2);\n    // else if (window.location.pathname === \"/about\" && value !== 3) setValue(3);\n    // else if (window.location.pathname === \"/contact\" && value !== 4)\n    //   setValue(4);\n    // else if (window.location.pathname === \"/estimate\" && value !== 5)\n    //   setValue(5);\n    // or\n\n    // switch (window.location.pathname) {\n    //   case \"/\":\n    //     if (value !== 0) {\n    //       setValue(0);\n    //     }\n    //     break;\n    //   case \"/services\":\n    //     if (value !== 1) {\n    //       setValue(1);\n    //       setSelectedIndex(0);\n    //     }\n    //     break;\n    //   case \"/customsoftware\":\n    //     if (value !== 1) {\n    //       setValue(1);\n    //       setSelectedIndex(1);\n    //     }\n    //     break;\n    //   case \"/mobileapps\":\n    //     if (value !== 1) {\n    //       setValue(1);\n    //       setSelectedIndex(2);\n    //     }\n    //     break;\n    //   case \"/websites\":\n    //     if (value !== 1) {\n    //       setValue(1);\n    //       setSelectedIndex(3);\n    //     }\n    //     break;\n    //   case \"/revolution\":\n    //     if (value !== 2) {\n    //       setValue(2);\n    //     }\n    //     break;\n    //   case \"/about\":\n    //     if (value !== 3) {\n    //       setValue(3);\n    //     }\n    //     break;\n    //   case \"/contact\":\n    //     if (value !== 4) {\n    //       setValue(4);\n    //     }\n    //     break;\n    //   case \"/estimate\":\n    //     if (value !== 5) {\n    //       setValue(5);\n    //     }\n    //     break;\n    //   default:\n    //     break;\n    // }\n  }, [value, menuOptions, selectedIndex, routes]);\n  const tabs = (\n    <React.Fragment>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        className={classes.tabContainer}\n        indicatorColor=\"primary\"\n      >\n        {\" \"}\n        {/*indicateColor bottom tab color remove kar rha*/}\n        {routes.map((route, index) => (\n          <Tab\n            key={`${route}${index}`}\n            className={classes.tab}\n            component={Link}\n            to={route.link}\n            label={route.name}\n            aria-owns={route.ariaOwns}\n            aria-haspopup={route.ariaPopup}\n            onMouseOver={route.mouseOver}\n          />\n        ))}\n      </Tabs>\n      <Button variant=\"contained\" color=\"secondary\" className={classes.button}>\n        Free Estimate\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        open={openMenu}\n        onClose={handleClose}\n        MenuListProps={{ onMouseLeave: handleClose }}\n        classes={{ paper: classes.menu }} //{/*menu ke ander jo paper component hai use ka background white se change kar karne ke liye */}\n        elevation={0} //{/* services tab click karne pe thoda displace hona , rokne ke liye */}\n        style={{zIndex:1302}}\n        keepMounted\n      >\n        {menuOptions.map((option, i) => (\n          <MenuItem\n            key={`${option}${i}`}\n            component={Link}\n            to={option.link}\n            classes={{ root: classes.menuItem }}\n            onClick={(event) => {\n              handleMenuItemClick(event, i);\n              setValue(1);\n              handleClose();\n            }}\n            selected={i === selectedIndex && value === 1}\n          >\n            {option.name}\n          </MenuItem>\n        ))}\n        {/* \n                or via direct\n\n\n\n                  <MenuItem\n                  onClick={() => {\n                    handleClose();\n                    setValue(1);\n                  }}\n                  component={Link}\n                  to=\"/services\"\n                  classes={{root:classes.menuItem}}\n                >\n                  Services\n                </MenuItem>\n\n                <MenuItem\n                  onClick={() => {\n                    handleClose();\n                    setValue(1);\n                  }}\n                  component={Link}\n                  to=\"/customsoftware\"\n                  classes={{root:classes.menuItem}}\n                >\n                  Custom Software\n                </MenuItem>\n                <MenuItem\n                  onClick={() => {\n                    handleClose();\n                    setValue(1);\n                  }}\n                  component={Link}\n                  to=\"/mobileapps\"\n                  classes={{root:classes.menuItem}}\n                >\n                  Mobile App Developement\n                </MenuItem>\n                <MenuItem\n                  onClick={() => {\n                    handleClose();\n                    setValue(1);\n                  }}\n                  component={Link}\n                  to=\"/websites\"\n                  classes={{root:classes.menuItem}}\n                >\n                  Website Developement\n                </MenuItem>\n             \n                \n                \n                \n                */}\n      </Menu>\n    </React.Fragment>\n  );\n  const drawer = (\n    <React.Fragment>\n      <SwipeableDrawer\n        disableBackdropTransition={!iOS}\n        disableDiscovery={iOS}\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n        onOpen={() => setOpenDrawer(true)}\n        classes={{ paper: classes.drawer }}\n      >\n        {/**   <div className={classes.toolbarMargin}/> not required in our codee for pushing down drawer from appbar*/}\n        <List disabalePadding>\n          {routes.map((route) => (\n            <ListItem\n              divider\n              button\n              component={Link}\n              to={route.link}\n              selected={value === route.activeIndex}\n              classes={{selected:classes.drawerItemSeleted}}\n              key={`${route}${route.activeIndex}`}\n              onClick={() => {\n                setOpenDrawer(false);\n                setValue(route.activeIndex);\n              }}\n            >\n              <ListItemText\n                className={classes.drawerItem }\n              >\n                {route.name}{\" \"}\n              </ListItemText>\n            </ListItem>\n          ))}\n          <ListItem\n            onClick={() => {\n              setOpenDrawer(false);\n              setValue(5);\n            }}\n            divider\n            button\n            component={Link}\n            className={{root:classes.drawerItemEstimate,selected:classes.drawerItemSeleted}}\n            to=\"/estimate\"\n            selected={value === 5}\n          >\n            <ListItemText\n              className={\n                 classes.drawerItem\n              }\n              disableTypography\n            >\n              Free Estimate\n            </ListItemText>\n          </ListItem>\n        </List>\n      </SwipeableDrawer>\n      <IconButton\n        className={classes.drawerIconContainer}\n        onClick={() => setOpenDrawer(!openDrawer)}\n        disableRipple\n      >\n        <MenuIcon className={classes.drawerIcon}></MenuIcon>\n      </IconButton>\n    </React.Fragment>\n  );\n  return (\n    <React.Fragment>\n      <ElevationScroll>\n        <AppBar position=\"fixed\" className={classes.appbar}>\n          <Toolbar disableGutters={true} className={classes.logo}>\n            <Button\n              disableRipple\n              component={Link}\n              to=\"/\"\n              onClick={() => setValue(0)}\n              className={classes.logoContainer}\n            >\n              {\" \"}\n              {/*disableRipple logo mein click ke waqt color change nahi hone deta*/}\n              <img alt=\"company logo\" className={classes.logo} src={logo} />\n            </Button>\n\n            {matches ? drawer : tabs}\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      {/*vo button tag hide ho gye tha use show kar rha ,push kar rha jo content chup gya tha*/}\n      <div className={classes.toolbarMargin} />\n    </React.Fragment>\n  );\n}\n","/home/asus/WorkArea/React/arcdevelopment/src/components/ui/Theme.js",[],"/home/asus/WorkArea/React/arcdevelopment/src/components/ui/Footer.js",[],{"ruleId":"28","severity":1,"message":"29","line":4,"column":8,"nodeType":"30","messageId":"31","endLine":4,"endColumn":14},{"ruleId":"32","severity":1,"message":"33","line":151,"column":9,"nodeType":"34","endLine":176,"endColumn":4},{"ruleId":"32","severity":1,"message":"35","line":178,"column":9,"nodeType":"34","endLine":191,"endColumn":4},{"ruleId":"36","severity":1,"message":"37","line":196,"column":21,"nodeType":"38","messageId":"39","endLine":196,"endColumn":23},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","The 'menuOptions' array makes the dependencies of useEffect Hook (at line 275) change on every render. To fix this, wrap the initialization of 'menuOptions' in its own useMemo() Hook.","VariableDeclarator","The 'routes' array makes the dependencies of useEffect Hook (at line 275) change on every render. To fix this, wrap the initialization of 'routes' in its own useMemo() Hook.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]